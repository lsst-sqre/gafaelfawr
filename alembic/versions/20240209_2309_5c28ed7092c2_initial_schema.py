"""Initial schema.

Revision ID: 5c28ed7092c2
Revises:
Create Date: 2024-11-19 22:40:16.309715+00:00
"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5c28ed7092c2"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "admin",
        sa.Column("username", sa.String(length=64), nullable=False),
        sa.PrimaryKeyConstraint("username"),
    )
    op.create_table(
        "admin_history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=64), nullable=False),
        sa.Column(
            "action",
            sa.Enum("add", "remove", name="adminchange"),
            nullable=False,
        ),
        sa.Column("actor", sa.String(length=64), nullable=False),
        sa.Column(
            "ip_address",
            sa.String(length=64).with_variant(postgresql.INET(), "postgresql"),
            nullable=False,
        ),
        sa.Column("event_time", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "admin_history_by_time",
        "admin_history",
        ["event_time", "id"],
        unique=False,
    )
    op.create_table(
        "token",
        sa.Column(
            "token", sa.String(length=64, collation="C"), nullable=False
        ),
        sa.Column("username", sa.String(length=64), nullable=False),
        sa.Column(
            "token_type",
            sa.Enum(
                "session",
                "user",
                "notebook",
                "internal",
                "service",
                name="tokentype",
            ),
            nullable=False,
        ),
        sa.Column("token_name", sa.String(length=64), nullable=True),
        sa.Column("scopes", sa.String(length=512), nullable=False),
        sa.Column("service", sa.String(length=64), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("last_used", sa.DateTime(), nullable=True),
        sa.Column("expires", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("token"),
        sa.UniqueConstraint("username", "token_name"),
    )
    op.create_index(
        "token_by_username", "token", ["username", "token_type"], unique=False
    )
    op.create_table(
        "token_auth_history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(length=64), nullable=False),
        sa.Column("username", sa.String(length=64), nullable=False),
        sa.Column(
            "token_type",
            sa.Enum(
                "session",
                "user",
                "notebook",
                "internal",
                "service",
                name="tokentype",
            ),
            nullable=False,
        ),
        sa.Column("token_name", sa.String(length=64), nullable=True),
        sa.Column("parent", sa.String(length=64), nullable=True),
        sa.Column("scopes", sa.String(length=512), nullable=True),
        sa.Column("service", sa.String(length=64), nullable=True),
        sa.Column(
            "ip_address",
            sa.String(length=64).with_variant(postgresql.INET(), "postgresql"),
            nullable=True,
        ),
        sa.Column("event_time", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "token_auth_history_by_time",
        "token_auth_history",
        ["event_time", "id"],
        unique=False,
    )
    op.create_index(
        "token_auth_history_by_token",
        "token_auth_history",
        ["token", "event_time", "id"],
        unique=False,
    )
    op.create_index(
        "token_auth_history_by_username",
        "token_auth_history",
        ["username", "event_time", "id"],
        unique=False,
    )
    op.create_table(
        "token_change_history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(length=64), nullable=False),
        sa.Column("username", sa.String(length=64), nullable=False),
        sa.Column(
            "token_type",
            sa.Enum(
                "session",
                "user",
                "notebook",
                "internal",
                "service",
                name="tokentype",
            ),
            nullable=False,
        ),
        sa.Column("token_name", sa.String(length=64), nullable=True),
        sa.Column("parent", sa.String(length=64), nullable=True),
        sa.Column("scopes", sa.String(length=512), nullable=False),
        sa.Column("service", sa.String(length=64), nullable=True),
        sa.Column("expires", sa.DateTime(), nullable=True),
        sa.Column("actor", sa.String(length=64), nullable=True),
        sa.Column(
            "action",
            sa.Enum("create", "revoke", "expire", "edit", name="tokenchange"),
            nullable=False,
        ),
        sa.Column("old_token_name", sa.String(length=64), nullable=True),
        sa.Column("old_scopes", sa.String(length=512), nullable=True),
        sa.Column("old_expires", sa.DateTime(), nullable=True),
        sa.Column(
            "ip_address",
            sa.String(length=64).with_variant(postgresql.INET(), "postgresql"),
            nullable=True,
        ),
        sa.Column("event_time", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "token_change_history_by_time",
        "token_change_history",
        ["event_time", "id"],
        unique=False,
    )
    op.create_index(
        "token_change_history_by_token",
        "token_change_history",
        ["token", "event_time", "id"],
        unique=False,
    )
    op.create_index(
        "token_change_history_by_username",
        "token_change_history",
        ["username", "event_time", "id"],
        unique=False,
    )
    op.create_table(
        "subtoken",
        sa.Column("child", sa.String(length=64), nullable=False),
        sa.Column("parent", sa.String(length=64), nullable=True),
        sa.ForeignKeyConstraint(
            ["child"], ["token.token"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["parent"], ["token.token"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("child"),
    )
    op.create_index("subtoken_by_parent", "subtoken", ["parent"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("subtoken_by_parent", table_name="subtoken")
    op.drop_table("subtoken")
    op.drop_index(
        "token_change_history_by_username", table_name="token_change_history"
    )
    op.drop_index(
        "token_change_history_by_token", table_name="token_change_history"
    )
    op.drop_index(
        "token_change_history_by_time", table_name="token_change_history"
    )
    op.drop_table("token_change_history")
    op.drop_index(
        "token_auth_history_by_username", table_name="token_auth_history"
    )
    op.drop_index(
        "token_auth_history_by_token", table_name="token_auth_history"
    )
    op.drop_index(
        "token_auth_history_by_time", table_name="token_auth_history"
    )
    op.drop_table("token_auth_history")
    op.drop_index("token_by_username", table_name="token")
    op.drop_table("token")
    op.drop_index("admin_history_by_time", table_name="admin_history")
    op.drop_table("admin_history")
    op.drop_table("admin")
    # ### end Alembic commands ###
