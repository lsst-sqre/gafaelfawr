apiVersion: gafaelfawr.lsst.io/v1alpha1
kind: GafaelfawrIngress
metadata:
  name: small-ingress
  namespace: {namespace}
config:
  scopes:
    all: ["read:all"]
  service: tap
template:
  metadata:
    name: small
  spec:
    rules:
      - host: example.com
        http:
          paths:
            - path: /foo
              pathType: Prefix
              backend:
                service:
                  name: something
                  port:
                    name: http
---
apiVersion: gafaelfawr.lsst.io/v1alpha1
kind: GafaelfawrIngress
metadata:
  name: notebook-ingress
  namespace: {namespace}
config:
  scopes:
    any: ["read:all"]
  authCacheDuration: 5m
  loginRedirect: true
  replace403: true
  delegate:
    notebook: {braces}
    minimumLifetime: 600
template:
  metadata:
    name: notebook
    labels:
      some-label: foo
      app.kubernetes.io/managed-by: blah
    annotations:
      another.annotation.example.com: bar
  spec:
    rules:
      - host: example.com
        http:
          paths:
            - path: /bar
              pathType: Exact
              backend:
                service:
                  name: something
                  port:
                    number: 80
    tls:
      - hosts:
          - example.com
        secretName: tls-secret
---
apiVersion: gafaelfawr.lsst.io/v1alpha1
kind: GafaelfawrIngress
metadata:
  name: internal-ingress
  namespace: {namespace}
config:
  authType: basic
  scopes:
    all:
      - "read:all"
      - "read:some"
  delegate:
    internal:
      service: some-service
      scopes:
        - "read:all"
        - "read:some"
template:
  metadata:
    name: internal
  spec:
    rules:
      - host: example.com
        http:
          paths:
            - path: /baz
              pathType: ImplementationSpecific
              backend:
                service:
                  name: something
                  port:
                    number: 80
---
apiVersion: gafaelfawr.lsst.io/v1alpha1
kind: GafaelfawrIngress
metadata:
  name: authorization-ingress
  namespace: {namespace}
config:
  allowCookies: false
  scopes:
    all: ["read:all"]
  delegate:
    internal:
      service: some-service
      scopes:
        - "read:all"
    useAuthorization: true
template:
  metadata:
    name: authorization
    annotations:
      nginx.ingress.kubernetes.io/configuration-snippet: |
        add_header "X-Foo" "bar";
  spec:
    rules:
      - host: example.org
        http:
          paths:
            - path: /foo/bar
              pathType: Prefix
              backend:
                service:
                  name: something
                  port:
                    name: http
---
apiVersion: gafaelfawr.lsst.io/v1alpha1
kind: GafaelfawrIngress
metadata:
  name: anonymous-ingress
  namespace: {namespace}
config:
  scopes:
    anonymous: true
template:
  metadata:
    name: anonymous
    annotations:
      some.annotation: foo
  spec:
    rules:
      - host: example.org
        http:
          paths:
            - path: /foo/baz
              pathType: Prefix
              backend:
                service:
                  name: something
                  port:
                    name: http
---
apiVersion: gafaelfawr.lsst.io/v1alpha1
kind: GafaelfawrIngress
metadata:
  name: username-ingress
  namespace: {namespace}
config:
  scopes:
    all: ["read:all"]
  username: some-user
template:
  metadata:
    name: username
  spec:
    rules:
      - host: example.com
        http:
          paths:
            - path: /username
              pathType: Prefix
              backend:
                service:
                  name: something
                  port:
                    name: http
---
apiVersion: gafaelfawr.lsst.io/v1alpha1
kind: GafaelfawrIngress
metadata:
  name: service-ingress
  namespace: {namespace}
config:
  scopes:
    all: ["read:all"]
  onlyServices:
    - portal
    - vo-cutouts
  service: uws
template:
  metadata:
    name: service
  spec:
    rules:
      - host: example.com
        http:
          paths:
            - path: /service
              pathType: Prefix
              backend:
                service:
                  name: something
                  port:
                    name: http
---
apiVersion: gafaelfawr.lsst.io/v1alpha1
kind: GafaelfawrIngress
metadata:
  name: service-any-ingress
  namespace: {namespace}
config:
  scopes:
    all: []
  onlyServices:
    - vo-cutouts
  service: uws
template:
  metadata:
    name: service-any
  spec:
    rules:
      - host: example.com
        http:
          paths:
            - path: /service/any
              pathType: Prefix
              backend:
                service:
                  name: something
                  port:
                    name: http
---
apiVersion: gafaelfawr.lsst.io/v1alpha1
kind: GafaelfawrIngress
metadata:
  name: subdomain-ingress
  namespace: {namespace}
config:
  loginRedirect: true
  scopes:
    all: ["read:all"]
  userDomain: true
template:
  metadata:
    name: subdomain
  spec:
    rules:
      - host: "*.nb.example.com"
        http:
          paths:
            - path: "/"
              pathType: "Prefix"
              backend:
                service:
                  name: "something"
                  port:
                    number: 80
    tls:
      - hosts:
          - "*.nb.example.com"
        secretName: "tls-secret"
