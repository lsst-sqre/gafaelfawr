apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: small
  namespace: {namespace}
  annotations:
    nginx.ingress.kubernetes.io/auth-method: GET
    nginx.ingress.kubernetes.io/auth-response-headers: "Authorization,Cookie,X-Auth-Request-Email,X-Auth-Request-User"
    nginx.ingress.kubernetes.io/auth-url: "https://foo.example.com/auth?scope=read%3Aall"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      {snippet}
  creationTimestamp: {any}
  generation: {any}
  managedFields: {any}
  ownerReferences:
    - apiVersion: gafaelfawr.lsst.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: GafaelfawrIngress
      name: small-ingress
      uid: {any}
  resourceVersion: {any}
  uid: {any}
spec:
  ingressClassName: nginx
  rules:
    - host: foo.example.com
      http:
        paths:
          - path: /foo
            pathType: Prefix
            backend:
              service:
                name: something
                port:
                  name: http
status: {any}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: notebook
  namespace: {namespace}
  annotations:
    another.annotation.example.com: bar
    nginx.ingress.kubernetes.io/auth-method: GET
    nginx.ingress.kubernetes.io/auth-response-headers: "Authorization,Cookie,X-Auth-Request-Email,X-Auth-Request-User,X-Auth-Request-Token"
    nginx.ingress.kubernetes.io/auth-signin: "https://foo.example.com/login"
    nginx.ingress.kubernetes.io/auth-url: "https://foo.example.com/auth?scope=read%3Aall&satisfy=any&notebook=true&minimum_lifetime=600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      {snippet}
  creationTimestamp: {any}
  generation: {any}
  labels:
    some-label: foo
  managedFields: {any}
  ownerReferences:
    - apiVersion: gafaelfawr.lsst.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: GafaelfawrIngress
      name: notebook-ingress
      uid: {any}
  resourceVersion: {any}
  uid: {any}
spec:
  ingressClassName: nginx
  rules:
    - host: foo.example.com
      http:
        paths:
          - path: /bar
            pathType: Exact
            backend:
              service:
                name: something
                port:
                  number: 80
  tls:
    - hosts:
        - foo.example.com
      secretName: tls-secret
status: {any}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: internal
  namespace: {namespace}
  annotations:
    nginx.ingress.kubernetes.io/auth-method: GET
    nginx.ingress.kubernetes.io/auth-response-headers: "Authorization,Cookie,X-Auth-Request-Email,X-Auth-Request-User,X-Auth-Request-Token"
    nginx.ingress.kubernetes.io/auth-url: "https://foo.example.com/auth?scope=read%3Aall&scope=read%3Asome&delegate_to=some-service&delegate_scope=read%3Aall%2Cread%3Asome&auth_type=basic"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      {snippet}
  creationTimestamp: {any}
  generation: {any}
  managedFields: {any}
  ownerReferences:
    - apiVersion: gafaelfawr.lsst.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: GafaelfawrIngress
      name: internal-ingress
      uid: {any}
  resourceVersion: {any}
  uid: {any}
spec:
  ingressClassName: nginx
  rules:
    - host: foo.example.com
      http:
        paths:
          - path: /baz
            pathType: ImplementationSpecific
            backend:
              service:
                name: something
                port:
                  number: 80
status: {any}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: authorization
  namespace: {namespace}
  annotations:
    nginx.ingress.kubernetes.io/auth-method: GET
    nginx.ingress.kubernetes.io/auth-response-headers: "Authorization,Cookie,X-Auth-Request-Email,X-Auth-Request-User,X-Auth-Request-Token"
    nginx.ingress.kubernetes.io/auth-url: "https://foo.example.com/auth?scope=read%3Aall&delegate_to=some-service&delegate_scope=read%3Aall&use_authorization=true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header "X-Foo" "bar";
      {snippet}
  creationTimestamp: {any}
  generation: {any}
  managedFields: {any}
  ownerReferences:
    - apiVersion: gafaelfawr.lsst.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: GafaelfawrIngress
      name: authorization-ingress
      uid: {any}
  resourceVersion: {any}
  uid: {any}
spec:
  ingressClassName: nginx
  rules:
    - host: foo.example.com
      http:
        paths:
          - path: /foo
            pathType: Prefix
            backend:
              service:
                name: something
                port:
                  name: http
status: {any}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: anonymous
  namespace: {namespace}
  annotations:
    nginx.ingress.kubernetes.io/auth-method: GET
    nginx.ingress.kubernetes.io/auth-response-headers: "Authorization,Cookie"
    nginx.ingress.kubernetes.io/auth-url: "https://foo.example.com/auth/anonymous"
    some.annotation: foo
  creationTimestamp: {any}
  generation: {any}
  managedFields: {any}
  ownerReferences:
    - apiVersion: gafaelfawr.lsst.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: GafaelfawrIngress
      name: anonymous-ingress
      uid: {any}
  resourceVersion: {any}
  uid: {any}
spec:
  ingressClassName: nginx
  rules:
    - host: foo.example.com
      http:
        paths:
          - path: /foo
            pathType: Prefix
            backend:
              service:
                name: something
                port:
                  name: http
status: {any}
