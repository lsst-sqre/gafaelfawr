[tox]
envlist = py,typing,lint,docs,docs-linkcheck
isolated_build = True

[docker:postgres]
image = postgres:latest
environment =
    POSTGRES_PASSWORD=INSECURE-PASSWORD
    POSTGRES_USER=gafaelfawr
    POSTGRES_DB=gafaelfawr
# The healthcheck ensures that tox-docker won't run tests until the
# container is up and the command finishes with exit code 0 (success)
healthcheck_cmd = PGPASSWORD=$POSTGRES_PASSWORD psql \
    --user=$POSTGRES_USER --dbname=$POSTGRES_DB \
    --host=127.0.0.1 --quiet --no-align --tuples-only \
    -1 --command="SELECT 1"
healthcheck_timeout = 1
healthcheck_retries = 30
healthcheck_interval = 1
healthcheck_start_period = 1
volumes =
    bind:ro:{toxinidir}/tests/support/postgresql.conf:/etc/postgresql/postgresql.conf

[docker:redis]
image = redis:7
healthcheck_cmd =
    redis-cli ping
healthcheck_timeout = 1
healthcheck_retries = 30
healthcheck_interval = 1
healthcheck_start_period = 1

[testenv]
description = Run pytest against {envname}
deps =
    -r{toxinidir}/requirements/main.txt
    -r{toxinidir}/requirements/dev.txt
setenv =
    GAFAELFAWR_ALEMBIC_CONFIG_PATH = {toxinidir}/alembic.ini
    GAFAELFAWR_DATABASE_URL = postgresql://gafaelfawr@localhost/gafaelfawr
    GAFAELFAWR_DATABASE_PASSWORD = INSECURE-PASSWORD
    GAFAELFAWR_REDIS_EPHEMERAL_URL = redis://localhost/1
    GAFAELFAWR_REDIS_PERSISTENT_URL = redis://localhost/0
    GAFAELFAWR_UI_PATH = {toxinidir}/ui/public

[testenv:alembic]
description = Run Alembic against a test database
commands =
    alembic {posargs}
setenv =
    GAFAELFAWR_BASE_URL = https://foo.example.com
    GAFAELFAWR_BASE_INTERNAL_URL = http://gafaelfawr.gafaelfawr.svc.cluster.local:8080
    GAFAELFAWR_CONFIG_PATH = {toxinidir}/alembic/gafaelfawr.yaml
    GAFAELFAWR_DATABASE_URL = postgresql://gafaelfawr@localhost/gafaelfawr
    GAFAELFAWR_DATABASE_PASSWORD = INSECURE
    GAFAELFAWR_REDIS_EPHEMERAL_URL = redis://localhost/1
    GAFAELFAWR_REDIS_PERSISTENT_URL = redis://localhost/0

[testenv:coverage-report]
description = Compile coverage from each test run.
skip_install = true
deps = coverage[toml]>=5.0.2
depends =
    py-coverage
commands = coverage report

[testenv:docs]
description = Build documentation (HTML) with Sphinx
allowlist_externals =
    rm
commands =
    rm -rf docs/dev/internals
    # https://github.com/sphinx-contrib/redoc/issues/48
    rm -f docs/_build/html/_static/redoc.js
    sphinx-build -W --keep-going -n -T -b html -d {envtmpdir}/doctrees docs docs/_build/html

[testenv:docs-linkcheck]
description = Check links in the documentation
allowlist_externals =
    make
    rm
commands =
    # https://github.com/sphinx-contrib/redoc/issues/48
    rm -f docs/_build/linkcheck/_static/redoc.js
    make linkcheck

[testenv:gafaelfawr]
description = Run Gafaelfawr command-line tool against a test database
commands =
    gafaelfawr {posargs}
setenv =
    GAFAELFAWR_ALEMBIC_CONFIG_PATH = {toxinidir}/alembic.ini
    GAFAELFAWR_BASE_URL = https://foo.example.com
    GAFAELFAWR_BASE_INTERNAL_URL = http://gafaelfawr.gafaelfawr.svc.cluster.local:8080
    GAFAELFAWR_CONFIG_PATH = {toxinidir}/alembic/gafaelfawr.yaml
    GAFAELFAWR_DATABASE_URL = postgresql://gafaelfawr@localhost/gafaelfawr
    GAFAELFAWR_DATABASE_PASSWORD = INSECURE
    GAFAELFAWR_REDIS_EPHEMERAL_URL = redis://localhost/1
    GAFAELFAWR_REDIS_PERSISTENT_URL = redis://localhost/0
    GAFAELFAWR_REDIS_PASSWORD = TOTALLY-INSECURE-test-password

[testenv:lint]
description = Lint codebase by running pre-commit
skip_install = true
deps =
    pre-commit
commands = pre-commit run --all-files

[testenv:py]
description = Run pytest with Docker prerequisites
docker =
    postgres
    redis
commands =
    pytest -vv {posargs}

[testenv:py-coverage]
description = Run pytest with Docker prerequisites and coverage analysis
docker =
    postgres
    redis
commands =
    pytest -vv --cov=gafaelfawr --cov-branch --cov-report= {posargs}

[testenv:py-full]
description = Run pytest with coverage and Kubernetes
docker =
    postgres
    redis
commands =
    pytest -vv --cov=gafaelfawr --cov-branch --cov-report= {posargs}
setenv =
    GAFAELFAWR_ALEMBIC_CONFIG_PATH = {toxinidir}/alembic.ini
    GAFAELFAWR_DATABASE_URL = postgresql://gafaelfawr@localhost/gafaelfawr
    GAFAELFAWR_DATABASE_PASSWORD = INSECURE-PASSWORD
    GAFAELFAWR_REDIS_EPHEMERAL_URL = redis://localhost/1
    GAFAELFAWR_REDIS_PERSISTENT_URL = redis://localhost/0
    GAFAELFAWR_UI_PATH = {toxinidir}/ui/public
    TEST_KUBERNETES = 1

[testenv:typing]
description = Run mypy
commands =
    mypy alembic src/gafaelfawr tests
