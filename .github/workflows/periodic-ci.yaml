# This is a separate run of the Python test suite that doesn't cache the tox
# environment and runs from a schedule. The purpose is to test whether
# updating pinned dependencies would cause any tests to fail.

name: Periodic CI

env:
  # Current supported uv version. The uv documentation recommends pinning
  # this. The version should match the version used in .pre-commit-config.yaml
  # and frozen in uv.lock.
  UV_VERSION: "0.6.6"

"on":
  schedule:
    - cron: "0 12 * * 1"
  workflow_dispatch: {}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: ${{ env.UV_VERSION }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Set up Minikube
        uses: medyagh/setup-minikube@v0.0.19
        with:
          kubernetes-version: "v1.27.3"

      - name: Install extra packages
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz libpq-dev libldap2-dev libsasl2-dev

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: ui/package-lock.json

      - name: Read .nvmrc
        id: node_version
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT

      # First try to restore the fully-installed node modules. If that works
      # (no changes to the JavaScript layer), skip npm i and restoring the
      # cache of downloaded modules. If that fails, restore the cache of the
      # downloaded modules and then run npm clean-install.
      - name: Cache installed Node modules
        uses: actions/cache@v4
        id: node-cache
        with:
          path: ./ui/node_modules
          key: node-${{ steps.node_version.outputs.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

      # --force is currently required because react-aria-modal hasn't been
      # updated for the latest React.
      - name: Install Node dependencies
        run: npm install --force
        if: steps.node-cache.outputs.cache-hit != 'true'
        working-directory: ./ui

      - name: Build the UI
        run: npm run build
        working-directory: ./ui

      # Do not use make update-deps because it also tries to upgrade the NPM
      # dependencies, which we do not want to check periodically.
      - name: Update dependencies
        run: |
          uv lock --upgrade
          uv sync --only-group lint --inexact
          uv run pre-commit autoupdate
        shell: bash

      - name: Run tox
        run: uv run --only-group=tox tox run -e lint,typing,py-full,docs,docs-linkcheck

      - name: Report status
        if: failure()
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notify_when: "failure"
          notification_title: "Periodic test for {repo} failed"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_ALERT_WEBHOOK }}
